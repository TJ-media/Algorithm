# -*- coding: utf-8 -*-
"""Greedy_못박기.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12hGKVm66xqvdSoFjjN4QCbIZ7ugx-WZk
"""

n = int(input())
if n == 1:
	print(1)

total = []
for i in range(n):
	a, b = map(int,input().split())
	total.append([a, b])
total.sort(key = lambda x:x[1])

count = 1
i, j = 1, 0
for i in range(n):
	if total[i][0] > total[j][1]:
		count += 1
		j = i

print(count)


#알고리즘 분석
#입력 받은 구간의 시작점과 끝점을 배열로 저장해서 모든 구간을 저장하는 2차원 배열 total을 만든다.
#그 후 total을 끝점을 기준으로 정렬한다.
#total list의 처음부터 끝까지(n개) for문으로 돌면서 다음 구간의 시작점이 이전 구간의 끝점보다 뒤라면 pin개수를 하나 추가해준다.
#총 필요한 pin 개수를 리턴한다.

#수행시간 분석
#입력 받는 첫 번째 for문은 O(n).
#total을 sort하는데 O(nlogn).
#필요한 pin 개수를 세는 for문은 O(n).
#총 O(n) + O(nlogn) + O(n) = O(nlogn)시간이 걸린다.